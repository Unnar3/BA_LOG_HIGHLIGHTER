emphasis { font-style: italic; }
strong { font-weight: bold; }
header { color: rgba(0, 0, 128, 1); }
comment { color: rgba(96, 139, 78, 1); }
constant.language { color: rgba(86, 156, 214, 1); }
constant.numeric { color: rgba(181, 206, 168, 1); }
constant.regexp { color: rgba(100, 102, 149, 1); }
constant.rgb-value { color: rgba(212, 212, 212, 1); }
entity.name.tag { color: rgba(86, 156, 214, 1); }
entity.name.function { color: rgba(212, 212, 212, 1); }
entity.name.class { color: rgba(212, 212, 212, 1); }
entity.name.selector { color: rgba(215, 186, 125, 1); }
entity.other.attribute-name { color: rgba(156, 220, 254, 1); }
entity.other.attribute-name.css { color: rgba(215, 186, 125, 1); }
invalid { color: rgba(244, 71, 71, 1); }
markup.underline { text-decoration: underline; }
markup.bold { font-weight: bold; }
markup.heading { color: rgba(103, 150, 230, 1); }
markup.italic { font-style: italic; }
markup.inserted { color: rgba(181, 206, 168, 1); }
markup.deleted { color: rgba(206, 145, 120, 1); }
markup.changed { color: rgba(86, 156, 214, 1); }
meta.selector { color: rgba(215, 186, 125, 1); }
meta.tag { color: rgba(128, 128, 128, 1); }
punctuation.tag.js { color: rgba(128, 128, 128, 1); }
punctuation.tag.tsx { color: rgba(128, 128, 128, 1); }
meta.preprocessor { color: rgba(86, 156, 214, 1); }
meta.preprocessor.string { color: rgba(206, 145, 120, 1); }
meta.preprocessor.numeric { color: rgba(181, 206, 168, 1); }
meta.structure.dictionary.key.python { color: rgba(156, 220, 254, 1); }
meta.header.diff { color: rgba(86, 156, 214, 1); }
storage { color: rgba(86, 156, 214, 1); }
storage.type { color: rgba(86, 156, 214, 1); }
storage.modifier { color: rgba(86, 156, 214, 1); }
string { color: rgba(206, 145, 120, 1); }
string.tag { color: rgba(206, 145, 120, 1); }
string.value { color: rgba(206, 145, 120, 1); }
string.regexp { color: rgba(209, 105, 105, 1); }
support.type.property-name { color: rgba(156, 220, 254, 1); }
keyword { color: rgba(86, 156, 214, 1); }
keyword.control { color: rgba(86, 156, 214, 1); }
keyword.control.less { color: rgba(215, 186, 125, 1); }
keyword.operator { color: rgba(212, 212, 212, 1); }
keyword.operator.new { color: rgba(86, 156, 214, 1); }
keyword.other.unit { color: rgba(181, 206, 168, 1); }
metatag.php { color: rgba(86, 156, 214, 1); }
support.function.git-rebase { color: rgba(156, 220, 254, 1); }
constant.sha.git-rebase { color: rgba(181, 206, 168, 1); }
storage.modifier.import.java { color: rgba(212, 212, 212, 1); }
storage.modifier.package.java { color: rgba(212, 212, 212, 1); }